html {
    scroll-behavior: smooth; /* This one line of code saved me lots of attempts to learn java script for smooth scrolling*/
}

body {
    font-size: 16px;
    background-color: lightgray;
    font-family: "skolar-sans-latin", sans-serif;
    font-weight: 400;
    font-style: normal;
}

main {
    padding-top: 20px;
    border-top: white 15px;
    border-style: solid;
}

header { /*The template I generated didn't use a header tag, but for the sake of better control and Semantic HTML, I added one to the code*/
    background-color: #B15858;
    position: sticky; 
    top: 0;
    border-bottom: white 15px;
    border-style: solid;
}

header img {
    height: 150px;
    width: 100px;
}

.feature {
    max-height: 375px;
    width: auto;
    border: #25242D;
    border-style: solid;
}

ul {
    padding-right: 2em;
}

li {
    padding-right: 0.8em;
}

.hero { /* This code is partly from my first assignment, as the application is quite similar. In this case I had to learn how to correctly position a background image and use flexbox instead of grid*/
    display: flex;
    background-image: url(../images/hero.jpg);
    background-size: cover;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: center;
    margin: 0px;
    padding: 0px;
    overflow: hidden;
    min-height: calc(250px + 20vw);
    justify-content: center;
    align-items: center;
}

.title {
    display: flex;
    background-color: #25242D;
    margin: 0px;
    padding: 0px;
    min-height: calc(50px + 10vw);
    justify-content: center;
    align-items: center;
    font-size: calc(3vw + 35px);
}

h1 {
    font-size: calc(6vw + 5px); /* Using the calc function has been an extremely helpful technique for precisely adjusting the size of my font at different reactive sizes.*/
    color: #DA3939;
    text-align: center;
    font-family: "fleisch-wolf", sans-serif;
    font-weight: 400;
    font-style: normal;
}

h2 {
    font-size: calc(3vw + 35px);
    color: #DA3939;
    text-align: center;
    font-family: "fleisch-wolf", sans-serif;
    font-weight: 400;
    font-style: normal;
}

h3 {
    font-size: calc(1vw + 35px);
    color: #DA3939;
    text-align: center;
    font-family: "fleisch-wolf", sans-serif;
    font-weight: 400;
    font-style: normal;
}

p {
    font-size: calc(0.4vw + 12px);
}

footer { /* Similar to my hero content, my footer was partly brought over from assignment one, as with a focus on the code and experimentation there wasn't much content to place on the footer.*/
    display: flex;
    background-color: #25242D;
    max-height: 15em;
    color: #FFFFFF;
    padding-top: 0.1em;
    justify-content: center;
    align-items: center;
    text-align: center;
    min-height: 10em;
}

/* Below is all the changes I made to the bootstrap tags. I didn't have to change them much, but I adjusted a couple things to suit my site.*/
/* I think I have learnt the basics of using bootstrap for navigation and to set up a grid, and it saved me a ton of time creating the css for these elements.*/
.navbar-brand { 
    padding: 10px;
}
.nav-link {
    color: white;
    font-size: 35px;
    font-family: "fleisch-wolf", sans-serif;
    font-weight: 400;
    font-style: normal;
}
.navbar-toggler {
    color: white;
    background-color: white;
}
.navbar-collapse {
    flex-basis: 100%;
    flex-grow: 0;
    align-items: center;
}
.row {
    padding-bottom: calc(0.5vw + 10px);
    padding-top: calc(0.5vw + 10px);
    border-bottom: #25242D 5px;
    border-style: solid;
}

/* Here I added a couple adjustments to the way the navbar worked, as the template ChatGPT generated had some issues with the hamburger dropdown.*/
@media (min-width: 768px) {
.navbar-expand-md 
.navbar-collapse {
    display: flex;
    flex-basis: 0;
}
}

/*This helps my images display at an appropriate size for smaller screens.*/
@media (max-width: 600px) {
    .feature {
    max-height: 300px;
    }
    }